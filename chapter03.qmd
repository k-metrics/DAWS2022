# データの散らばり具合を見積もる統計量
```{r}
#| label: setup
#| echo: false
#| warning: false
#| message: false
source("./R/setup.R")
```

## データの散らばりやバラツキを知りたい

　第2講で学んだ平均値（算術平均）は、データを代表する統計量で、ある一点（支点・重心）を示しているに過ぎません。データが平均値の周辺にどのように分布しているかはヒストグラムを使うことで視覚的には確認できますが、統計量として数値的に扱えた方がなにかと便利なはずです。

　  

## バスの到着時刻の例で分散を理解する

　蛇足ですが実際の路線バスでは予定時刻より早く到着しないように調整運転がなされていますので、時刻より大幅に早着することは稀です。

```{r}
#| code-summary: "ベクトルを読み込みたい場合はscan()関数を使います"
x <- scan(file = "./data/P36_図表3-1.csv", sep = ",")

x
```

　平均値を求める`mean()`関数がありますが、ここでは平均値の計算式通りの計算を行っています。

```{r}
#| code-summary: "平均値を求める"
平均値 <- sum(x) / length(x)
平均値
```

```{r}
#| code-summary: "偏差を求める"
偏差 = x - 平均値
偏差
```

　偏差の総和は必ずゼロ（$0$）になります。

```{r}
#| code-summary: "偏差の総和を求める"
sum(偏差)
```

　偏差の二乗和をデータの個数で割ったものは、（標本）分散と呼ばれます。不偏分散と呼ばれる分散は計算式が異なります。Rで分散を計算する`var()`関数は不偏分散を求める関数です。

```{r}
#| code-summary: "（標本）分散を求める"
sum(偏差 ^ 2) / length(x)
```

```{r}
#| code-summary: "`var()`関数は**不偏**分散"
#| column: margin
var(x)
```

　偏差の二乗平均値（$= \sqrt{\mbox{分散}}$）は標準偏差と呼ばれます。Rで標準偏差を計算する`sd()`関数は不偏分散のルートを取ったものです。

```{r}
#| code-summary: "（標本）標準偏差を求める"
sqrt(sum(偏差 ^ 2) / length(x))
```

```{r}
#| code-summary: "`sd()`関数は標準偏差"
#| column: margin
sd(x)
```

　  

## 標準偏差の意味

```{r}
#| code-summary: "対象データ"
x <- read.csv(file = "./data/P39_図表3-4.csv") 

x %>% 
  df_print()
```



```{r}
#| code-summary: "各々の平均値を求める"
mean <- x %>% 
  dplyr::summarise(X平均値 = mean(X), Y平均値 = mean(Y))

mean %>% 
  df_print()
```

```{r}
#| code-summary: "各々の偏差を求める"
x %>% 
  dplyr::mutate(X偏差 = X - mean$X平均値,
                Y偏差 = Y - mean$Y平均値) %>% 
  df_print()
```

```{r}
#| code-summary: "各々の標準偏差を求める"
x %>% 
  dplyr::mutate(X偏差 = X - mean$X平均値,
                Y偏差 = Y - mean$Y平均値) %>% 
  dplyr::summarise(X標準偏差 = sqrt(sum(X偏差 ^ 2) / length(X)),
                   Y標準偏差 = sqrt(sum(Y偏差 ^ 2) / length(Y))) %>% 
  df_print()
```
　  
　偏差と標準偏差を可視化すると下図のようになり、XよりYの方が広範囲に分布していることが分かります。

```{r}
#| code-summary: "偏差と標準偏差を可視化する"
x %>% 
  dplyr::mutate(X偏差 = X - mean$X平均値,
                Y偏差 = Y - mean$Y平均値) %>% 
  dplyr::select(-X, -Y) %>% 
  stripchart(xlim = c(-5, 5))
abline(v = c(-0.89, 0.89), lty = 3)  # X標準偏差／ドット（点線）
abline(v = c(-3.03, 3.03), lty = 2)  # Y標準偏差／ダッシュ（鎖線）
```

　  

## 度数分布表から標準偏差を求める

```{r}
#| code-summary: "対象データ"
x <- read.csv(file = "./data/P40_図表3-6.csv",
              fileEncoding = "UTF-8")

x %>% 
  df_print()
```
　  
　第2講の「2−3 度数分布表での平均値」で学んだように度数分布表から平均値（の近似値）は $$\mbox{平均値} \fallingdotseq \sum{(\mbox{階級値} \times \mbox{相対度数})}$$ 　で求めることができます。

```{r}
#| code-summary: "度数分布表から平均値を求める"
x %>% 
  dplyr::mutate(AxB = A階級値 * B相対度数) %>% 
  df_print()
```

```{r}
#| code-summary: "度数分布表から平均値を求める"
平均値 <- x %>% 
  dplyr::mutate(AxB = A階級値 * B相対度数) %>% 
  dplyr::summarize(平均値 = sum(AxB)) %>% 
  dplyr::pull(平均値)
平均値
```
　  
　平均値を求められたので $$\mbox{階級の偏差（C階級値-平均値）} = \mbox{階級値} - \mbox{平均値}$$ 　とすると度数分布表の計算値と同じ考え方を適用し $$\mbox{階級の偏差の二乗平均} = \sum{(\mbox{階級の偏差}^2 \times \mbox{相対度数})} = \mbox{分散}$$ 　となります。

```{r}
#| code-summary: "度数分布表から分散と階級偏差を求める"
x %>% 
  dplyr::mutate(C = A階級値 - 平均値) %>% 
  dplyr::mutate(`C^2` = C ^ 2) %>% 
  dplyr::mutate(`C^2xB` = `C^2` * B相対度数) %>% 
  dplyr::select(A階級値, `C階級値-平均値` = C,
                `C^2`, B相対度数, `C^2xB`) %>% 
  df_print()
```

```{r}
#| code-summary: "度数分布表から分散と階級偏差を求める"
x %>% 
  dplyr::mutate(`C` = `A階級値` - `平均値`) %>% 
  dplyr::mutate(`C^2` = `C` ^ 2) %>% 
  dplyr::mutate(`C^2xB` = `C^2` * `B相対度数`) %>% 
  dplyr::select(`A階級値`, `C階級値-平均値` = `C`,
                `C^2`, `B相対度数`, `C^2xB`) %>% 
  dplyr::summarise(`分散` = sum(`C^2xB`)) %>% 
  dplyr::mutate(`標準偏差` = sqrt(`分散`)) %>% 
  df_print()
```

　  

## 練習問題 {.unnumbered}

　次の架空のデータの標準偏差を次のステップで計算してみよ。ステップの記載は省略します。

```{r}
#| code-summary: "対象データ"
データ <- scan(file = "./data/P42_練習問題_v.csv", sep = ",")

データ
```

### 解答例 {.unnumbered}

```{r}
#| code-summary: "平均値を求める"
平均値 <- sum(データ) / length(データ)
平均値
```

```{r}
#| code-summary: "偏差を求める"
偏差 <- データ - 平均値
偏差
```

```{r}
#| code-summary: "二乗偏差を求める"
二乗偏差 <- 偏差 ^ 2
二乗偏差
```

```{r}
#| code-summary: "分散を求める"
分散 <- sum(二乗偏差) / length(二乗偏差)
分散
```

```{r}
#| code-summary: "標準偏差を求める"
標準偏差 <- sqrt(分散)
標準偏差
```

　  

## 追加問題 {.unnumbered}

　P16にある身長データの度数分布表を作り、分散と標準偏差を求めてみましょう。

```{r, echo=FALSE}
x <- "./data/P16_図表1-1 .csv" %>% 
  readr::read_csv(col_names = FALSE,
                  show_col_types = FALSE) %>% 
  tidyr::pivot_longer(cols = dplyr::starts_with("X"),
                      names_to = "name",
                      values_to = "value") %>% 
  dplyr::arrange(name) %>% 
  dplyr::select(height = value) %>% 
  dplyr::mutate(class = cut(height,
                            breaks = pretty(height, n = nclass.Sturges(height)),
                            include.lowest = FALSE, right = TRUE)) %>% 
  dplyr::count(class) %>% 
  dplyr::mutate(cumsum_n = cumsum(n),
                prop = prop.table(n), cumsum_prop = cumsum(prop)) %>% 
  # 階級値を求める
  dplyr::mutate(class_value = as.character(class)) %>%
  tidyr::separate(class_value, into = c("l", "h"), sep = ",") %>% 
  dplyr::mutate(l = as.integer(stringr::str_remove(l, "[[:punct:]]")) + 1L,
                h = as.integer(stringr::str_remove(h, "[[:punct:]]")),
                mids = (l + h) / 2L) %>%
  # 変数名を日本語にする
  dplyr::select(`A階級値` = mids, `B相対度数` = prop)

x %>% 
  df_print()
```

　  

### 解答例 {.unnumbered}

#### 度数分布表から平均・分散・標準偏差を求める {.unnumbered}

```{r}
#| code-summary: "度数分布表から平均値を求める"
x %>% 
  dplyr::mutate(AxB = A階級値 * B相対度数) %>% 
  df_print()

平均値 <- x %>% 
  dplyr::mutate(AxB = A階級値 * B相対度数) %>% 
  dplyr::summarise(平均値 = sum(AxB)) %>% 
  dplyr::pull(平均値)
平均値
```

```{r}
#| code-summary: "度数分布表から分散と標準偏差を求める"
x %>% 
  dplyr::mutate(C = A階級値 - 平均値) %>% 
  dplyr::mutate(`C^2` = C ^ 2) %>% 
  dplyr::mutate(`C^2xB` = `C^2` * B相対度数) %>% 
  df_print()
```

```{r}
#| code-summary: "度数分布表から分散と標準偏差を求める"
freq_summary <- x %>% 
  dplyr::mutate(C = A階級値 - 平均値) %>% 
  dplyr::mutate(`C^2` = C ^ 2) %>% 
  dplyr::mutate(`C^2xB` = `C^2` * B相対度数) %>% 
  dplyr::summarise(平均 = sum(A階級値 * B相対度数),
                   分散 = sum(`C^2xB`)) %>% 
  dplyr::mutate(標準偏差 = sqrt(分散))

freq_summary %>% 
  df_print()
```

　  

#### 生データから平均・分散・標準偏差を求める {.unnumbered}

```{r}
#| code-summary: "生データから平均・分散・標準偏差を求める"
"./data/P16_図表1-1 .csv" %>% 
  readr::read_csv(col_names = FALSE,
                  show_col_types = FALSE) %>% 
  tidyr::pivot_longer(cols = dplyr::starts_with("X"),
                      names_to = "name",
                      values_to = "value") %>% 
  dplyr::arrange(name) %>% 
  dplyr::select(height = value) %>% 
  dplyr::mutate(偏差 = height - mean(height)) %>% 
  dplyr::mutate(二乗偏差 = 偏差 ^ 2) %>% 
  df_print()
```

```{r}
#| code-summary: "生データから平均・分散・標準偏差を求める"
raw_summary <- "./data/P16_図表1-1 .csv" %>% 
  readr::read_csv(col_names = FALSE,
                  show_col_types = FALSE) %>% 
  tidyr::pivot_longer(cols = dplyr::starts_with("X"),
                      names_to = "name",
                      values_to = "value") %>% 
  dplyr::arrange(name) %>% 
  dplyr::select(height = value) %>% 
  dplyr::mutate(偏差 = height - mean(height)) %>% 
  dplyr::mutate(二乗偏差 = 偏差 ^ 2) %>% 
  dplyr::summarise(平均 = sum(height) / length(height),
                   分散 = sum(二乗偏差) / length(height),
                   標準偏差 = sqrt(分散))

raw_summary %>% 
  df_print()
```

　  

#### 度数分布表と生データの平均・分散・標準偏差を比較する {.unnumbered}

```{r}
#| code-summary: "度数分布表からの要約統計量"
#| code-fold: true
freq_summary %>% 
  df_print()
```

```{r}
#| code-summary: "生データからの要約統計量"
#| code-fold: true
raw_summary %>% 
  df_print()
```

```{r}
#| code-summary: "度数分布表と生データの差"
#| code-fold: true
(freq_summary - raw_summary) %>% 
  df_print()
```

　  



　  

---
